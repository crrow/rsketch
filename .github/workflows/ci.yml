name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  # tells the Rust compiler to emit additional warnings during compilation that it might not normally report by default.
  RUSTFLAGS: -Dwarnings
  # used for debugging purposes.
  RUST_BACKTRACE: 1
  rust_stable: stable
  rust_nightly: nightly-2025-06-20
  rust_clippy: '1.87.0'

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

  rust-tests:
    strategy:
      fail-fast: false
      matrix:
        # TODO: add windows which does not support container
        os:
          #          - ubuntu-22.04
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install protoc
        uses: arduino/setup-protoc@v3
      - name: Install cargo-binstall
        uses: cargo-bins/cargo-binstall@main
      - name: Install cargo-tarpaulin
        run: cargo binstall -y cargo-tarpaulin
      - name: Rust unit tests with coverage report
#         https://github.com/xd009642/tarpaulin/issues/1092#issuecomment-1407739176
        run: cargo tarpaulin --engine llvm --no-dead-code --no-fail-fast --all-features --workspace -o xml --output-dir ./cov-reports
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: cov-report-rust-tests-${{ runner.os }}
          path: ./cov-reports
          if-no-files-found: 'error'

  tests-pass:
    name: all systems go
    runs-on: ubuntu-latest
    needs:
      - basic-test
    steps:
      - run: exit 0

  basics:
    name: basic checks
    runs-on: ubuntu-latest
    needs:
      - clippy
      - fmt
      - docs
    steps:
      - run: exit 0

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install protoc
        uses: arduino/setup-protoc@v3
      - name: Install Rust ${{ env.rust_clippy }}
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.rust_clippy }}
          components: clippy

      - uses: Swatinem/rust-cache@v2

      - name: "clippy --all"
        run: cargo clippy --all --tests --all-features --no-deps

  docs:
    name: docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install protoc
        uses: arduino/setup-protoc@v3

      - name: Install Rust ${{ env.rust_nightly }}
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.rust_nightly }}

      - name: "doc --lib --all-features"
        run: cargo doc --lib --no-deps --all-features --document-private-items

  fmt:
    name: cargo fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: rustfmt

      - name: Run fmt
        run: cargo +nightly fmt --all -- --check --unstable-features

  basic-test:
    needs: basics
    name: basic-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
          - macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust ${{ env.rust_stable }}
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.rust_stable }}
      - name: Install protoc
        uses: arduino/setup-protoc@v3
      - name: Install cargo-nextest
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest

      - uses: Swatinem/rust-cache@v2

      - name: Run tests
        run: |
          set -euxo pipefail
          cargo nextest run 
          cargo test --doc
